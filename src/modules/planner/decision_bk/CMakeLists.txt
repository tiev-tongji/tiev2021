#set(decision_src ${decision_src} decision.cpp decision_fsm.cpp decision_event.cpp decision_view.cpp decision_state.cpp )
#set(decision_src ${decision_src} free_driving_state.cpp global_planning_state.cpp intersection_state.cpp normal_driving_state.cpp tracking_state.cpp parking_state.cpp lane_driving_state.cpp back_tracking_state.cpp stop_state.cpp global_replanning_state.cpp)
aux_source_directory(. decision_src)
add_library(decision ${decision_src})
target_link_libraries(decision road_manager message_manager nature coordinate_converter planner_tools path_planner speed_planner)

# if(OpenCV_FOUND)
#    add_executable(decision_test "decision_test.cpp")
#    target_link_libraries(decision_test decision path_planner road_manager message_manager liblcm.so nature coordinate_converter ${OpenCV_LIBS} planner_tools)
# endif(OpenCV_FOUND)
